#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
# Runs duplicity on remote files
#
##############################---FUNCTIONS---###################################

function runDuplicityRemote() {
  if [ ! -d ${SOURCE_DIRECTORY} ]
  then
      echo "Backup source directory does not exist"
      exit 1
  fi

  echo "################################################################################" >> "${LOGFILE}"
  echo "# Started the backup of ${BACKUP_NAME}" >> "${LOGFILE}"
  echo "# Started at $(date)" >> "${LOGFILE}"
  echo "" >> "${LOGFILE}"
  echo "################################################################################" >> "${DUPLICITYLOG}"
  echo "# Started the backup of ${BACKUP_NAME}" >> "${DUPLICITYLOG}"
  echo "# Started at $(date)" >> "${DUPLICITYLOG}"
  echo "" >> "${DUPLICITYLOG}"

  if [ "${PROTO}" = "rsync" ]
  then
    mkdir -p "tmp/${BACKUP_NAME}"
    RSYNC_PASSWORD="${PASSWORD}" rsync -a --recursive  "tmp/${BACKUP_NAME}" "${PROTO}://${USERNAME}@${SERVER}:${PORT}/${MODULE}" >> /dev/null
    rmdir "tmp/${BACKUP_NAME}"
  fi
  PASSPHRASE="${GPG_PASSPHRASE}"    duplicity --full-if-older-than "${FULL_BACKUP_INTERVAL}" \
          --num-retries 10 \
          --encrypt-key "${GPG_KEY}" \
          --gpg-binary "/usr/bin/gpg2" \
          --log-file ${DUPLICITYLOG} \
          "${IGNORE_PATHS:=''}" \
          "${SOURCE_DIRECTORY}" \
          "${DESTINATION_URL}" >> "${LOGFILE}"
}


function removeOldBackups() {
  PASSPHRASE="${GPG_PASSPHRASE}"    duplicity remove-all-but-n-full ${SETS_TO_KEEP} \
          --num-retries 10 \
          --encrypt-key "${GPG_KEY}" \
          --gpg-binary "/usr/bin/gpg2" \
          --force \
          --log-file ${DUPLICITYLOG} \
          ${DESTINATION_URL} >> "${LOGFILE}"
  }

################################################################################

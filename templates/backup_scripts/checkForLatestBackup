#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
# Looks at backup configs and checks if there are fresh backups present.
#
##############################---VARIABLES---###################################

BACKUP_STATUS=0

################################################################################

###############################---WORKDIR---####################################

cd $( dirname $0 )

################################################################################

##############################---FUNCTIONS---###################################

function chackForBackup() {
  for backup in *.conf
  do
    unset DESTINATION_ROOT_DIR
    . "./${backup}"
    . "${BACKUP_BACKEND}.cf"
    if [[ $(duplicity collection-status $DESTINATION_URL | grep -e "Incremental         $(date +'%a %b %e') ..:..:.. $(date +%Y)" | wc -l) > 0 ]]
    then
      echo "Backup - ${BACKUP_NAME}: OK" >> /dev/null
    elif [[ $(duplicity collection-status $DESTINATION_URL | grep -e "Full         $(date +'%a %b %e') ..:..:.. $(date +%Y)" | wc -l) > 0 ]]
    then
      echo "Backup - ${BACKUP_NAME}: OK" >> /dev/null
    else
      echo "Backup - ${BACKUP_NAME}: missing!"
      BACKUP_STATUS=1
    fi
  done
  exit ${BACKUP_STATUS}
}

################################################################################

###############################---EXECUTION---##################################

chackForBackup

################################################################################

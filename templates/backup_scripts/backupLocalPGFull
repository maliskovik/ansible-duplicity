#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
# This script creates a full pg cluster dump to the destonation file.
#
##############################---INCLUDES---####################################

. "${BACKUP_BACKEND}.cf"
. ./runDuplicity

################################################################################

##############################---VARIABLES---###################################

DBUSER="postgres"

#Mising variables are included from backupConfig
SOURCE_DIRECTORY="${BACKUPDIR}/${BACKUP_NAME}"
DESTINATION="${SOURCE_DIRECTORY}/dump.sql"
: ${PG_REPLICATION:="false"}

################################################################################

##############################---FUNCTIONS---###################################

function connectAndDump() {
    mkdir -p ${SOURCE_DIRECTORY}
    if [ $PG_REPLICATION == "true" ]
    then
      psql -U ${DBUSER} -c "select pg_wal_replay_pause();" > /dev/null
    fi
    sudo -u ${DBUSER} pg_dumpall > ${DESTINATION}
    if [ $PG_REPLICATION == "true" ]
    then
      psql -U ${DBUSER} -c "select pg_wal_replay_resume();" > /dev/null
    fi
}

function runBackup() {
    connectAndDump
    runDuplicity
    removeOldBackups
}

################################################################################

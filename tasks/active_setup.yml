- name: Install duplicity - debian
  apt:
    name: "{{ duplicity_ubuntu_packages }}"
    state: latest
    force: yes

  when: ansible_os_family == "Debian"

- name: Install duplicity -arch
  pacman:
    name: "{{ duplicity_arch_packages }}"
    state: latest
    force: yes
  when: ansible_os_family == "Archlinux"

- name: Install duplicity - CentOS
  yum:
    name: "{{ duplicity_centos_packages }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Set GPG options Centos
  lineinfile:
    state: present
    path: "/root/.gnupg/gpg.conf"
    line: "{{ item }}"
    create: yes
  with_items:
    - "use-agent"
  notify: Reload GPG agent
  when: ansible_os_family == "RedHat"

- name: Set GPG options
  lineinfile:
    state: present
    path: "/root/.gnupg/gpg.conf"
    line: "{{ item }}"
    create: yes
  with_items:
    - "use-agent"
    - "pinentry-mode loopback"
  notify: Reload GPG agent
  when: ansible_os_family == "Debian"

- name: Set GPG agent options
  lineinfile:
    state: present
    path: "/root/.gnupg/gpg-agent.conf"
    line: "allow-loopback-pinentry"
    create: yes
  notify: Reload GPG agent

- name: Create backup directory
  file:
    path: "{{ backup_directory }}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Private backends
  template:
    src: backup_config
    dest: "{{ backup_directory }}/{{ item.name }}.cf"
    mode: 0700
    owner: root
    group: root
  with_items: "{{ duplicity_backends|default(omit) }}"
  when: duplicity_backends is defined

- name: Group backends
  template:
    src: backup_config
    dest: "{{ backup_directory }}/{{ item.name }}.cf"
    mode: 0700
    owner: root
    group: root
  with_items: "{{ duplicity_group_backends|default(omit) }}"
  when: duplicity_group_backends is defined

- name: Copy scripts
  template:
    src: "{{ item }}"
    dest: "{{ backup_directory }}"
    owner: root
    group: root
    mode: 0755
  with_fileglob: "templates/backup_scripts/*"

- name: Copy custom scripts
  template:
    src: "{{ item }}"
    dest: "{{ backup_directory }}"
    owner: root
    group: root
    mode: 0755
  when: duplicity_custom_backup_scripts is defined
  with_items: "{{ duplicity_custom_backup_scripts| default(omit) }}"

- name: Set backups
  copy:
    src: "configs/{{ inventory_hostname }}/duplicity_configs/"
    dest: "{{ backup_directory }}"
    owner: root
    group: root
    mode: 0755

- name: Add duplicity cronjob
  template:
    src: cron_job
    dest: "{{ duplicity_cronjob_file }}"
    mode: 0644
    owner: root
    group: root

- name: Set logrotate policy
  template:
    src: logrotate
    dest: /etc/logrotate.d/duplicity
    mode: 0644
    owner: root
    group: root

- name: Set postgresql secrets
  template:
    src: pgpass
    dest: "{{ duplciity_secrets_postgresql_path }}"
    mode: 0600
    owner: root
    group: root
  when: duplicity_secrets_mysql is defined

- name: Set samba secrets
  template:
    src: samba_credentials
    dest: "{{ item.path }}"
    owner: "{{ item.owner| default('root') }}"
    group: "{{ item.group| default('root') }}"
    mode: "{{ item.mode| default('0600') }}"
  with_items: "{{ duplicity_secrets_samba }}"
  when: duplicity_secrets_samba is defined

- name: Set mysql secrets
  template:
    src: mysql_secrets
    dest: "{{ item.path| default('/root/.my.cnf') }}"
    owner: "{{ item.owner| default('root') }}"
    group: "{{ item.group| default('root') }}"
    mode: "{{ item.mode| default('0600') }}"
  with_items: "{{ duplicity_secrets_mysql }}"
  when: duplicity_secrets_mysql is defined
